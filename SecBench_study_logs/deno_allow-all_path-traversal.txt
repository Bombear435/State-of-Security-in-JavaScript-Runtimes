
> deno test --allow-all --unstable-detect-cjs

running 2 tests from ./11xiaoli_1.1.0/11xiaoli.test.js
Path Traversal in 11xiaoli ... FAILED (2s)
Uncaught error from ./11xiaoli_1.1.0/11xiaoli.test.js FAILED
running 2 tests from ./22lixian_1.0.0/22lixian.test.js
------- post-test output -------
8888/tcp:           
----- post-test output end -----
Path Traversal in 22lixian ... FAILED (2s)
Uncaught error from ./22lixian_1.0.0/22lixian.test.js FAILED
running 2 tests from ./@vivaxy-here_3.1.0/vivaxy_here.test.js
Path Traversal in @vivaxy/here ... FAILED (2s)
Uncaught error from ./@vivaxy-here_3.1.0/vivaxy_here.test.js FAILED
running 2 tests from ./angular-http-server_1.0.0/angular-http-server.test.js
Path Traversal in angular-http-server ... FAILED (2s)
Uncaught error from ./angular-http-server_1.0.0/angular-http-server.test.js FAILED
running 1 test from ./api-proxy_0.0.2/api-proxy.test.js
Path Traversal in api-proxy ...
------- post-test output -------
server started on port:8888
----- post-test output end -----
running 1 test from ./aso-server_0.4.3/aso-server.test.js
Path Traversal in aso-server ...running 1 test from ./asset-cache_0.0.6/asset-cache.test.js
Path Traversal in asset-cache ...
------- post-test output -------
	Asset server using dir /home/bombe/UniSaarland/WebSec-Seminar/deno-SecBench.js/path-traversal
----- post-test output end -----
running 1 test from ./atropa-ide_0.2.2-2/atropa-ide.test.js
Path Traversal in atropa-ide ...
------- post-test output -------
Server Started on port 8884
Press ctrl+c to quit.
----- post-test output end -----
Path Traversal in atropa-ide ... FAILED (35ms)
Uncaught error from ./atropa-ide_0.2.2-2/atropa-ide.test.js FAILED
running 2 tests from ./augustine_0.2.3/augustine.test.js
Path Traversal in augustine ... FAILED (2s)
Uncaught error from ./augustine_0.2.3/augustine.test.js FAILED
running 1 test from ./basic-static_2.0.2/basic-static.test.js
Path Traversal in basic-static ... FAILED (32ms)
Uncaught error from ./basic-static_2.0.2/basic-static.test.js FAILED
running 2 tests from ./bitty_0.1.0/bitty.test.js
Path Traversal in bitty ... FAILED (2s)
Uncaught error from ./bitty_0.1.0/bitty.test.js FAILED
running 2 tests from ./caihong_1.0.0/caihong.test.js
Path Traversal in caihong ... FAILED (2s)
Uncaught error from ./caihong_1.0.0/caihong.test.js FAILED
running 2 tests from ./canvas-designer_1.2.1/canvas-designer.test.js
Path Traversal in canvas-designer ... FAILED (2s)
Uncaught error from ./canvas-designer_1.2.1/canvas-designer.test.js FAILED
running 2 tests from ./caolilinode1_1.0.0/caolilinode1.test.js
Path Traversal in caolilinode1 ... FAILED (2s)
Uncaught error from ./caolilinode1_1.0.0/caolilinode1.test.js FAILED
running 2 tests from ./caolilinode_1.0.0/caolilinode.test.js
Path Traversal in caolilinode ... FAILED (2s)
Uncaught error from ./caolilinode_1.0.0/caolilinode.test.js FAILED
running 2 tests from ./crud-file-server_0.7.0/crud-file-server.test.js
Path Traversal in crud-file-server ... FAILED (2s)
Uncaught error from ./crud-file-server_0.7.0/crud-file-server.test.js FAILED
running 2 tests from ./cuciuci_1.1.0/cuciuci.test.js
Path Traversal in cuciuci ... FAILED (2s)
Uncaught error from ./cuciuci_1.1.0/cuciuci.test.js FAILED
running 2 tests from ./cuiaiguang_1.0.0/cuiaiguang.test.js
Path Traversal in cuiaiguang ... FAILED (2s)
Uncaught error from ./cuiaiguang_1.0.0/cuiaiguang.test.js FAILED
running 2 tests from ./cxy_1.1.0/cxy.test.js
Path Traversal in cxy ... FAILED (2s)
Uncaught error from ./cxy_1.1.0/cxy.test.js FAILED
running 2 tests from ./cyber-js_1.0.6/cyber-js.test.js
Path Traversal in cyber-js ... FAILED (2s)
Uncaught error from ./cyber-js_1.0.6/cyber-js.test.js FAILED
running 2 tests from ./cypserver_1.0.0/cypserver.test.js
Path Traversal in cypserver ... FAILED (2s)
Uncaught error from ./cypserver_1.0.0/cypserver.test.js FAILED
running 2 tests from ./datachannel-client_1.0.2/datachannel-client.test.js
Path Traversal in datachannel-client ... FAILED (2s)
Uncaught error from ./datachannel-client_1.0.2/datachannel-client.test.js FAILED
running 2 tests from ./dcdcdcdcdc_1.0.0/dcdcdcdcdc.test.js
Path Traversal in dcdcdcdcdc ... FAILED (2s)
Uncaught error from ./dcdcdcdcdc_1.0.0/dcdcdcdcdc.test.js FAILED
running 1 test from ./der-server_0.0.9/der-server.test.js
Path Traversal in der-server ...
------- post-test output -------
Server running at http://127.0.0.1:8887
the dir is: "/home/bombe/UniSaarland/WebSec-Seminar/deno-SecBench.js/path-traversal/der-server_0.0.9"
----- post-test output end -----
running 2 tests from ./dilu_0.1.3/dilu.test.js
Path Traversal in dilu ... FAILED (2s)
Uncaught error from ./dilu_0.1.3/dilu.test.js FAILED
running 2 tests from ./dylmomo_1.0.0/dylmomo.test.js
Path Traversal in dylmomo ... FAILED (2s)
Uncaught error from ./dylmomo_1.0.0/dylmomo.test.js FAILED
running 1 test from ./easy-node-server_1.2.1/easy-node-server.test.js
Path Traversal in easy-node-server ...
------- post-test output -------
服务启动成功，可以用浏览器访问：http://localhost:8895 确认

----- post-test output end -----
running 2 tests from ./ex-http-frame_1.0.2/ex-http-frame.test.js
Path Traversal in ex-http-frame ... FAILED (2s)
Uncaught error from ./ex-http-frame_1.0.2/ex-http-frame.test.js FAILED
running 1 test from ./express-blinker_0.0.6/express-blinker.test.js
Path Traversal in express-blinker ... FAILED (127ms)
Uncaught error from ./express-blinker_0.0.6/express-blinker.test.js FAILED
running 2 tests from ./exxxxxxxxxxx_1.0.2/exxxxxxxxxxx.test.js
Path Traversal in exxxxxxxxxxx ... FAILED (2s)
Uncaught error from ./exxxxxxxxxxx_1.0.2/exxxxxxxxxxx.test.js FAILED
running 2 tests from ./fakelearnnodejs_0.0.1/fakelearnnodejs.test.js
Path Traversal in fakelearnnodejs ... FAILED (2s)
Uncaught error from ./fakelearnnodejs_0.0.1/fakelearnnodejs.test.js FAILED
running 2 tests from ./fast-http-cli_0.0.8/fast-http-cli.test.js
Path Traversal in fast-http-cli ... FAILED (2s)
Uncaught error from ./fast-http-cli_0.0.8/fast-http-cli.test.js FAILED
running 1 test from ./fast-http_0.1.3/fast-http.test.js
Path Traversal in fast-http ...
------- post-test output -------
The server is now launch on: http://localhost:8080
----- post-test output end -----
Path Traversal in fast-http ... FAILED (38ms)
Uncaught error from ./fast-http_0.1.3/fast-http.test.js FAILED
running 2 tests from ./fbr-client_1.0.3/fbr-client.test.js
Path Traversal in fbr-client ... FAILED (2s)
Uncaught error from ./fbr-client_1.0.3/fbr-client.test.js FAILED
running 2 tests from ./file-static-server_1.0.2/file-static-server.test.js
Path Traversal in file-static-server ... FAILED (2s)
Uncaught error from ./file-static-server_1.0.2/file-static-server.test.js FAILED
running 2 tests from ./fsk-server_0.2.1/fsk-server.test.js
Path Traversal in fsk-server ... FAILED (2s)
Uncaught error from ./fsk-server_0.2.1/fsk-server.test.js FAILED
running 2 tests from ./gamebutler_1.0.4/gamebutler.test.js
Path Traversal in gamebutler ... FAILED (2s)
Uncaught error from ./gamebutler_1.0.4/gamebutler.test.js FAILED
running 2 tests from ./gaoxiaotingtingting_1.1.0/gaoxiaotingtingting.test.js
Path Traversal in gaoxiaotingtingting ... FAILED (2s)
Uncaught error from ./gaoxiaotingtingting_1.1.0/gaoxiaotingtingting.test.js FAILED
running 2 tests from ./gaoxuyan_1.1.0/gaoxuyan.test.js
Path Traversal in gaoxuyan ... FAILED (2s)
Uncaught error from ./gaoxuyan_1.1.0/gaoxuyan.test.js FAILED
running 2 tests from ./getstats_1.0.6/getstats.test.js
Path Traversal in getstats ... FAILED (2s)
Uncaught error from ./getstats_1.0.6/getstats.test.js FAILED
running 2 tests from ./gfm-srv_1.1.2/gfm-srv.test.js
Path Traversal in gfm-srv ... FAILED (2s)
Uncaught error from ./gfm-srv_1.1.2/gfm-srv.test.js FAILED
running 1 test from ./glance_3.0.0/glance.test.js
Path Traversal in glance ... FAILED (41ms)
Uncaught error from ./glance_3.0.0/glance.test.js FAILED
running 2 tests from ./goserv_1.0.0/goserv.test.js
Path Traversal in goserv ... FAILED (2s)
Uncaught error from ./goserv_1.0.0/goserv.test.js FAILED
running 2 tests from ./gyfserver_1.0.0/gyfserver.test.js
Path Traversal in gyfserver ... FAILED (2s)
Uncaught error from ./gyfserver_1.0.0/gyfserver.test.js FAILED
running 1 test from ./hangersteak_0.2.2/hangersteak.test.js
Path Traversal in hangersteak ... FAILED (38ms)
Uncaught error from ./hangersteak_0.2.2/hangersteak.test.js FAILED
running 2 tests from ./hdsdhhksjd_1.0.0/hdsdhhksjd.test.js
Path Traversal in hdsdhhksjd ... FAILED (2s)
Uncaught error from ./hdsdhhksjd_1.0.0/hdsdhhksjd.test.js FAILED
running 2 tests from ./hftp_0.0.6/hftp.test.js
Path Traversal in hftp ... FAILED (2s)
Uncaught error from ./hftp_0.0.6/hftp.test.js FAILED
running 2 tests from ./hostr_2.0.0/hostr.test.js
Path Traversal in hostr ... FAILED (2s)
Uncaught error from ./hostr_2.0.0/hostr.test.js FAILED
running 2 tests from ./http-file-server_0.2.6/http-file-server.test.js
Path Traversal in http-file-server ... FAILED (2s)
Uncaught error from ./http-file-server_0.2.6/http-file-server.test.js FAILED
running 2 tests from ./http-live-simulator_1.0.0/http-live-simulator.test.js
Path Traversal in http-live-simulator ... FAILED (2s)
Uncaught error from ./http-live-simulator_1.0.0/http-live-simulator.test.js FAILED
running 2 tests from ./httpea_3.0.4/httpea.test.js
Path Traversal in httpea ... FAILED (2s)
Uncaught error from ./httpea_3.0.4/httpea.test.js FAILED
running 2 tests from ./infraserver_0.0.1/infraserver.test.js
Path Traversal in infraserver ... FAILED (2s)
Uncaught error from ./infraserver_0.0.1/infraserver.test.js FAILED
running 2 tests from ./intsol-package_1.0.0/intsol-package.test.js
Path Traversal in intsol-package ... FAILED (2s)
Uncaught error from ./intsol-package_1.0.0/intsol-package.test.js FAILED
running 1 test from ./isv-http_0.0.9/isv-http.test.js
Path Traversal in isv-http ... FAILED (76ms)
Uncaught error from ./isv-http_0.0.9/isv-http.test.js FAILED
running 1 test from ./lander_1.0.0/lander.test.js
Path Traversal in lander ...
------- post-test output -------
server start at prot: 8988
----- post-test output end -----
running 2 tests from ./lessindex_1.0.0/lessindex.test.js
Path Traversal in lessindex ... FAILED (2s)
Uncaught error from ./lessindex_1.0.0/lessindex.test.js FAILED
running 2 tests from ./lihuini_1.0.0/lihuini.test.js
Path Traversal in lihuini ... FAILED (2s)
Uncaught error from ./lihuini_1.0.0/lihuini.test.js FAILED
running 2 tests from ./liuyaserver_1.0.0/liuyaserver.test.js
Path Traversal in liuyaserver ... FAILED (2s)
Uncaught error from ./liuyaserver_1.0.0/liuyaserver.test.js FAILED
running 2 tests from ./liyujing_1.1.0/liyujing.test.js
Path Traversal in liyujing ... FAILED (2s)
Uncaught error from ./liyujing_1.1.0/liyujing.test.js FAILED
running 2 tests from ./ljjnodeserve_1.0.0/ljjnodeserve.test.js
Path Traversal in ljjnodeserve ... FAILED (2s)
Uncaught error from ./ljjnodeserve_1.0.0/ljjnodeserve.test.js FAILED
running 2 tests from ./looppake_3.0.0/looppake.test.js
Path Traversal in looppake ... FAILED (2s)
Uncaught error from ./looppake_3.0.0/looppake.test.js FAILED
running 2 tests from ./ltt.js_1.0.0/ltt_js.test.js
Path Traversal in ltt.js ... FAILED (2s)
Uncaught error from ./ltt.js_1.0.0/ltt_js.test.js FAILED
running 2 tests from ./ltt_1.1.0/ltt.test.js
Path Traversal in ltt ... FAILED (2s)
Uncaught error from ./ltt_1.1.0/ltt.test.js FAILED
running 2 tests from ./lzl123_1.1.0/lzl123.test.js
Path Traversal in lzl123 ... FAILED (2s)
Uncaught error from ./lzl123_1.1.0/lzl123.test.js FAILED
running 2 tests from ./m-server_1.4.0/m-server.test.js
Path Traversal in m-server ... FAILED (2s)
Uncaught error from ./m-server_1.4.0/m-server.test.js FAILED
running 2 tests from ./mcstatic_0.0.20/mcstatic.test.js
Path Traversal in mcstatic ... FAILED (2s)
Uncaught error from ./mcstatic_0.0.20/mcstatic.test.js FAILED
running 2 tests from ./mfrs_1.0.0/mfrs.test.js
Path Traversal in mfrs ... FAILED (2s)
Uncaught error from ./mfrs_1.0.0/mfrs.test.js FAILED
running 2 tests from ./mfrserver_1.0.0/mfrserver.test.js
Path Traversal in mfrserver ... FAILED (2s)
Uncaught error from ./mfrserver_1.0.0/mfrserver.test.js FAILED
running 2 tests from ./my-sn_1.0.1/my-sn.test.js
Path Traversal in my-sn ... FAILED (2s)
Uncaught error from ./my-sn_1.0.1/my-sn.test.js FAILED
running 2 tests from ./myprolyz_1.1.0/myprolyz.test.js
Path Traversal in myprolyz ... FAILED (2s)
Uncaught error from ./myprolyz_1.1.0/myprolyz.test.js FAILED
running 2 tests from ./myserve111_1.1.2/myserve111.test.js
Path Traversal in myserve111 ... FAILED (2s)
Uncaught error from ./myserve111_1.1.2/myserve111.test.js FAILED
running 1 test from ./nitro-server_1.3.3/nitro-server.test.js
Path Traversal in nitro-server ...
------- post-test output -------

Static file server running at
  => http://localhost:8080/
CTRL + C to shutdown

Root directory is: /home/bombe/UniSaarland/WebSec-Seminar/deno-SecBench.js/path-traversal

----- post-test output end -----
Path Traversal in nitro-server ... FAILED (41ms)
Uncaught error from ./nitro-server_1.3.3/nitro-server.test.js FAILED
running 2 tests from ./node-cxc_1.0.0/node-cxc.test.js
Path Traversal in node-cxc ... FAILED (2s)
Uncaught error from ./node-cxc_1.0.0/node-cxc.test.js FAILED
running 1 test from ./node-http-server_8.1.2/node-http-server.test.js
Path Traversal in node-http-server ...running 1 test from ./node-simple-router_0.10.0/node-simple-router.test.js
Path Traversal in node-simple-router ... FAILED (27ms)
Uncaught error from ./node-simple-router_0.10.0/node-simple-router.test.js FAILED
running 1 test from ./node-srv_2.0.0/node-srv.test.js
Path Traversal in node-srv ... FAILED (32ms)
Uncaught error from ./node-srv_2.0.0/node-srv.test.js FAILED
running 1 test from ./node-static-webserver_0.0.1/node-static-webserver.test.js
Path Traversal in node-static-webserver ...running 1 test from ./node-staticserver_1.0.3/node-staticserver.test.js
Path Traversal in node-staticserver ... FAILED (21ms)
Uncaught error from ./node-staticserver_1.0.3/node-staticserver.test.js FAILED
running 2 tests from ./nodeaaaaa_1.3.0/nodeaaaaa.test.js
Path Traversal in nodeaaaaa ... FAILED (2s)
Uncaught error from ./nodeaaaaa_1.3.0/nodeaaaaa.test.js FAILED
running 2 tests from ./nodejsccc_1.0.0/nodejsccc.test.js
Path Traversal in nodejsccc ... FAILED (2s)
Uncaught error from ./nodejsccc_1.0.0/nodejsccc.test.js FAILED
running 2 tests from ./nopach_0.1.1/nopach.test.js
Path Traversal in nopach ... FAILED (2s)
Uncaught error from ./nopach_0.1.1/nopach.test.js FAILED
running 2 tests from ./open-device_4.0.1/open-device.test.js
Path Traversal in open-device ... FAILED (2s)
Uncaught error from ./open-device_4.0.1/open-device.test.js FAILED
running 2 tests from ./paopao613_1.0.0/paopao613.test.js
Path Traversal in paopao613 ... FAILED (2s)
Uncaught error from ./paopao613_1.0.0/paopao613.test.js FAILED
running 2 tests from ./peiserver_1.0.0/peiserver.test.js
Path Traversal in peiserver ... FAILED (2s)
Uncaught error from ./peiserver_1.0.0/peiserver.test.js FAILED
running 1 test from ./pico-static-server_2.3.4/pico-static-server.test.js
Path Traversal in pico-static-server ...
------- post-test output -------
Static server is listening on port 8982
----- post-test output end -----
running 1 test from ./proxey_0.4.2/proxey.test.js
Path Traversal in proxey ...
------- post-test output -------
Running in port: 8981
----- post-test output end -----
Path Traversal in proxey ... FAILED (29ms)
Uncaught error from ./proxey_0.4.2/proxey.test.js FAILED
running 2 tests from ./ptest_1.0.0/ptest.test.js
Path Traversal in ptest ... FAILED (2s)
Uncaught error from ./ptest_1.0.0/ptest.test.js FAILED
running 2 tests from ./public_0.1.2/public.test.js
Path Traversal in public ... FAILED (2s)
Uncaught error from ./public_0.1.2/public.test.js FAILED
running 2 tests from ./pytservce_1.0.0/pytservce.test.js
Path Traversal in pytservce ... FAILED (2s)
Uncaught error from ./pytservce_1.0.0/pytservce.test.js FAILED
running 2 tests from ./ritp_1.0.5/ritp.test.js
Path Traversal in ritp ... FAILED (2s)
Uncaught error from ./ritp_1.0.5/ritp.test.js FAILED
running 2 tests from ./rjpserver_1.0.0/rjpserver.test.js
Path Traversal in rjpserver ... FAILED (2s)
Uncaught error from ./rjpserver_1.0.0/rjpserver.test.js FAILED
running 1 test from ./rollup-plugin-dev-server_0.4.3/rollup-plugin-dev-server.test.js
Path Traversal in rollup-plugin-dev-server ... FAILED (32ms)
Uncaught error from ./rollup-plugin-dev-server_0.4.3/rollup-plugin-dev-server.test.js FAILED
running 1 test from ./rollup-plugin-serve-favicon_0.4.2/rollup-plugin-serve-favicon.test.js
Path Traversal in  rollup-plugin-serve-favicon ... FAILED (26ms)
Uncaught error from ./rollup-plugin-serve-favicon_0.4.2/rollup-plugin-serve-favicon.test.js FAILED
running 1 test from ./rollup-plugin-serve_0.4.2/rollup-plugin-serve.test.js
Path Traversal in rollup-plugin-serve ... FAILED (26ms)
Uncaught error from ./rollup-plugin-serve_0.4.2/rollup-plugin-serve.test.js FAILED
running 1 test from ./rollup-plugin-server_0.7.0/rollup-plugin-server.test.js
Path Traversal in rollup-plugin-server ... FAILED (47ms)
Uncaught error from ./rollup-plugin-server_0.7.0/rollup-plugin-server.test.js FAILED
running 2 tests from ./rtcmulticonnection-client_1.0.5/rtcmulticonnection-client.test.js
Path Traversal in rtcmulticonnection-client ... FAILED (2s)
Uncaught error from ./rtcmulticonnection-client_1.0.5/rtcmulticonnection-client.test.js FAILED
running 2 tests from ./run-this-place_1.0.2/run-this-place.test.js
Path Traversal in run-this-place ... FAILED (2s)
Uncaught error from ./run-this-place_1.0.2/run-this-place.test.js FAILED
running 2 tests from ./sabu_1.0.6/sabu.test.js
Path Traversal in sabu ... FAILED (2s)
Uncaught error from ./sabu_1.0.6/sabu.test.js FAILED
running 2 tests from ./serve-here.js_1.1.0/serve-here_js.test.js
Path Traversal in serve-here.js ... FAILED (2s)
Uncaught error from ./serve-here.js_1.1.0/serve-here_js.test.js FAILED
running 2 tests from ./serve46_1.0.0/serve46.test.js
Path Traversal in serve46 ... FAILED (2s)
Uncaught error from ./serve46_1.0.0/serve46.test.js FAILED
running 2 tests from ./server12311_1.2.0/server12311.test.js
Path Traversal in server12311 ... FAILED (2s)
Uncaught error from ./server12311_1.2.0/server12311.test.js FAILED
running 2 tests from ./serverabc_1.0.0/serverabc.test.js
Path Traversal in serverabc ... FAILED (2s)
Uncaught error from ./serverabc_1.0.0/serverabc.test.js FAILED
running 2 tests from ./serverfff_1.1.1/serverfff.test.js
Path Traversal in serverfff ... FAILED (2s)
Uncaught error from ./serverfff_1.1.1/serverfff.test.js FAILED
running 2 tests from ./servergmf_1.1.0/servergmf.test.js
Path Traversal in servergmf ... FAILED (2s)
Uncaught error from ./servergmf_1.1.0/servergmf.test.js FAILED
running 2 tests from ./serverhuwenhui_1.1.0/serverhuwenhui.test.js
Path Traversal in serverhuwenhui ... FAILED (2s)
Uncaught error from ./serverhuwenhui_1.1.0/serverhuwenhui.test.js FAILED
running 2 tests from ./serverliujiayi1_1.1.0/serverliujiayi1.test.js
Path Traversal in serverliujiayi1 ... FAILED (2s)
Uncaught error from ./serverliujiayi1_1.1.0/serverliujiayi1.test.js FAILED
running 2 tests from ./serverlyj333_1.1.0/serverlyj333.test.js
Path Traversal in serverlyj333 ... FAILED (2s)
Uncaught error from ./serverlyj333_1.1.0/serverlyj333.test.js FAILED
running 2 tests from ./serverlyr_1.1.0/serverlyr.test.js
Path Traversal in serverlyr ... FAILED (2s)
Uncaught error from ./serverlyr_1.1.0/serverlyr.test.js FAILED
running 2 tests from ./servershuai_1.2.0/servershuai.test.js
Path Traversal in servershuai ... FAILED (2s)
Uncaught error from ./servershuai_1.2.0/servershuai.test.js FAILED
running 2 tests from ./serversyysyy_1.1.0/serversyysyy.test.js
Path Traversal in serversyysyy ... FAILED (2s)
Uncaught error from ./serversyysyy_1.1.0/serversyysyy.test.js FAILED
running 2 tests from ./serverwg_1.0.0/serverwg.test.js
Path Traversal in serverwg ... FAILED (2s)
Uncaught error from ./serverwg_1.0.0/serverwg.test.js FAILED
running 2 tests from ./serverwzl_1.3.1/serverwzl.test.js
Path Traversal in serverwzl ... FAILED (2s)
Uncaught error from ./serverwzl_1.3.1/serverwzl.test.js FAILED
running 2 tests from ./serverxh_1.0.0/serverxh.test.js
------- post-test output -------
8888/tcp:           
----- post-test output end -----
Path Traversal in serverxh ... FAILED (2s)
Uncaught error from ./serverxh_1.0.0/serverxh.test.js FAILED
running 2 tests from ./serverxxx_1.0.0/serverxxx.test.js
------- post-test output -------
8888/tcp:           
----- post-test output end -----
Path Traversal in serverxxx ... FAILED (2s)
Uncaught error from ./serverxxx_1.0.0/serverxxx.test.js FAILED
running 2 tests from ./serveryaozeyan_1.0.4/serveryaozeyan.test.js
Path Traversal in serveryaozeyan ... FAILED (2s)
Uncaught error from ./serveryaozeyan_1.0.4/serveryaozeyan.test.js FAILED
running 2 tests from ./serveryyl_1.1.0/serveryyl.test.js
Path Traversal in serveryyl ... FAILED (2s)
Uncaught error from ./serveryyl_1.1.0/serveryyl.test.js FAILED
running 2 tests from ./serveryztyzt_1.4.0/serveryztyzt.test.js
Path Traversal in serveryztyzt ... FAILED (2s)
Uncaught error from ./serveryztyzt_1.4.0/serveryztyzt.test.js FAILED
running 2 tests from ./serverzyqzyq_1.1.0/serverzyqzyq.test.js
Path Traversal in serverzyqzyq ... FAILED (2s)
Uncaught error from ./serverzyqzyq_1.1.0/serverzyqzyq.test.js FAILED
running 2 tests from ./serverzyy_1.0.0/serverzyy.test.js
Path Traversal in serverzyy ... FAILED (2s)
Uncaught error from ./serverzyy_1.0.0/serverzyy.test.js FAILED
running 2 tests from ./servewuqianqianqian_1.0.0/servewuqianqianqian.test.js
Path Traversal in servewuqianqianqian ... FAILED (2s)
Uncaught error from ./servewuqianqianqian_1.0.0/servewuqianqianqian.test.js FAILED
running 2 tests from ./servey_2.2.0/servey.test.js
Path Traversal in servey ... FAILED (2s)
Uncaught error from ./servey_2.2.0/servey.test.js FAILED
running 2 tests from ./severzlt_1.0.0/severzlt.test.js
Path Traversal in severzlt ... FAILED (2s)
Uncaught error from ./severzlt_1.0.0/severzlt.test.js FAILED
running 2 tests from ./sgqserve_1.0.0/sgqserve.test.js
Path Traversal in sgqserve ... FAILED (2s)
Uncaught error from ./sgqserve_1.0.0/sgqserve.test.js FAILED
running 2 tests from ./shenliru3_1.3.0/shenliru3.test.js
Path Traversal in shenliru3 ... FAILED (2s)
Uncaught error from ./shenliru3_1.3.0/shenliru3.test.js FAILED
running 2 tests from ./shenliru_1.2.0/shenliru.test.js
Path Traversal in shenliru ... FAILED (2s)
Uncaught error from ./shenliru_1.2.0/shenliru.test.js FAILED
running 2 tests from ./shit-server_1.0.0/shit-server.test.js
Path Traversal in shit-server ... FAILED (2s)
Uncaught error from ./shit-server_1.0.0/shit-server.test.js FAILED
running 2 tests from ./simple-mock-server_0.2.1/simple-mock-server.test.js
Path Traversal in simple-mock-server ... FAILED (2s)
Uncaught error from ./simple-mock-server_0.2.1/simple-mock-server.test.js FAILED
running 2 tests from ./songcaihong_1.0.0/songcaihong.test.js
Path Traversal in songcaihong ... FAILED (2s)
Uncaught error from ./songcaihong_1.0.0/songcaihong.test.js FAILED
running 2 tests from ./srverqq_1.0.0/srverqq.test.js
Path Traversal in srverqq ... FAILED (2s)
Uncaught error from ./srverqq_1.0.0/srverqq.test.js FAILED
running 1 test from ./starfruit_0.2.2/starfruit.test.js
Path Traversal in starfruit ...running 2 tests from ./static-html-server_0.1.2/static-html-server.test.js
Path Traversal in static-html-server ... FAILED (2s)
Uncaught error from ./static-html-server_0.1.2/static-html-server.test.js FAILED
running 2 tests from ./static-server-gx_1.2.1/static-server-gx.test.js
Path Traversal in static-server-gx ... FAILED (2s)
Uncaught error from ./static-server-gx_1.2.1/static-server-gx.test.js FAILED
running 2 tests from ./statichttpserver_0.9.7/statichttpserver.test.js
Path Traversal in statichttpserver ... FAILED (2s)
Uncaught error from ./statichttpserver_0.9.7/statichttpserver.test.js FAILED
running 2 tests from ./statics-server_0.0.9/statics-server.test.js
Path Traversal in statics-server ... FAILED (2s)
Uncaught error from ./statics-server_0.0.9/statics-server.test.js FAILED
running 1 test from ./stattic_0.2.3/stattic.test.js
Path Traversal in stattic ...
------- post-test output -------
(node:366409) [DEP0128] DeprecationWarning: Invalid 'main' field in '/home/bombe/UniSaarland/WebSec-Seminar/deno-SecBench.js/path-traversal/stattic_0.2.3/node_modules/stattic/package.json' of './stattic.js'. Please either fix that or report it to the module author

Static server listening on: http://localhost:8977
Reading files from: /home/bombe/UniSaarland/WebSec-Seminar/deno-SecBench.js/path-traversal

----- post-test output end -----
Path Traversal in stattic ... FAILED (54ms)
Uncaught error from ./stattic_0.2.3/stattic.test.js FAILED
running 2 tests from ./susu-sum_1.0.0/susu-sum.test.js
Path Traversal in susu-sum ... FAILED (2s)
Uncaught error from ./susu-sum_1.0.0/susu-sum.test.js FAILED
running 2 tests from ./tinyserver2_0.5.2/tinyserver2.test.js
Path Traversal in tinyserver2 ... FAILED (2s)
Uncaught error from ./tinyserver2_0.5.2/tinyserver2.test.js FAILED
running 2 tests from ./tinyserver_0.1.1/tinyserver.test.js
Path Traversal in tinyserver ... FAILED (2s)
Uncaught error from ./tinyserver_0.1.1/tinyserver.test.js FAILED
running 2 tests from ./uekw1511server_1.0.1/uekw1511server.test.js
Path Traversal in uekw1511server ... FAILED (2s)
Uncaught error from ./uekw1511server_1.0.1/uekw1511server.test.js FAILED
running 2 tests from ./ussasasa_1.0.0/ussasasa.test.js
Path Traversal in ussasasa ... FAILED (2s)
Uncaught error from ./ussasasa_1.0.0/ussasasa.test.js FAILED
running 2 tests from ./wangguojing123_1.3.0/wangguojing123.test.js
Path Traversal in wangguojing123 ... FAILED (2s)
Uncaught error from ./wangguojing123_1.3.0/wangguojing123.test.js FAILED
running 2 tests from ./wangshuai_1.0.0/wangshuai.test.js
Path Traversal in wangshuai ... FAILED (2s)
Uncaught error from ./wangshuai_1.0.0/wangshuai.test.js FAILED
running 2 tests from ./web-node-server_0.1.0/web-node-server.test.js
Path Traversal in web-node-server ...
------- post-test output -------
server running at 9999
----- post-test output end -----
Path Traversal in web-node-server ... FAILED (20ms)
Uncaught error from ./web-node-server_0.1.0/web-node-server.test.js FAILED
running 1 test from ./webrepl_0.4.7/webrepl.test.js
Path Traversal in webrepl ... FAILED (23ms)
Uncaught error from ./webrepl_0.4.7/webrepl.test.js FAILED
running 2 tests from ./welcomyzt_1.1.0/welcomyzt.test.js
Path Traversal in welcomyzt ... FAILED (2s)
Uncaught error from ./welcomyzt_1.1.0/welcomyzt.test.js FAILED
running 2 tests from ./wenluhong111_1.0.0/wenluhong111.test.js
Path Traversal in wenluhong111 ... FAILED (2s)
Uncaught error from ./wenluhong111_1.0.0/wenluhong111.test.js FAILED
running 2 tests from ./wenluhong11_1.0.0/wenluhong11.test.js
------- post-test output -------
8888/tcp:           
----- post-test output end -----
Path Traversal in wenluhong11 ... FAILED (2s)
Uncaught error from ./wenluhong11_1.0.0/wenluhong11.test.js FAILED
running 2 tests from ./wenluhong1_1.0.0/wenluhong1.test.js
------- post-test output -------
8888/tcp:           
----- post-test output end -----
Path Traversal in wenluhong1 ... FAILED (2s)
Uncaught error from ./wenluhong1_1.0.0/wenluhong1.test.js FAILED
running 2 tests from ./wffserve_1.0.0/wffserve.test.js
------- post-test output -------
8888/tcp:           
----- post-test output end -----
Path Traversal in wffserve ... FAILED (2s)
Uncaught error from ./wffserve_1.0.0/wffserve.test.js FAILED
running 1 test from ./willvdb_test_server_0.0.0/willvdb_test_server.test.js
Path Traversal in willvdb_test_server ...running 2 tests from ./wind-mvc_0.0.6/wind-mvc.test.js
Path Traversal in wind-mvc ... FAILED (2s)
Uncaught error from ./wind-mvc_0.0.6/wind-mvc.test.js FAILED
running 2 tests from ./wintiwebdev_1.0.0/wintiwebdev.test.js
Path Traversal in wintiwebdev ... FAILED (2s)
Uncaught error from ./wintiwebdev_1.0.0/wintiwebdev.test.js FAILED
running 1 test from ./wrlc_0.2.5/wrlc.test.js
Path Traversal in wrlc ... FAILED (35ms)
Uncaught error from ./wrlc_0.2.5/wrlc.test.js FAILED
running 2 tests from ./wuzhuang_1.0.0/wuzhuang.test.js
Path Traversal in wuzhuang ... FAILED (2s)
Uncaught error from ./wuzhuang_1.0.0/wuzhuang.test.js FAILED
running 2 tests from ./wuzhuangserver_1.8.0/wuzhuangserver.test.js
Path Traversal in wuzhuangserver ... FAILED (2s)
Uncaught error from ./wuzhuangserver_1.8.0/wuzhuangserver.test.js FAILED
running 2 tests from ./xbhxbh_1.1.0/xbhxbh.test.js
Path Traversal in xbhxbh ... FAILED (2s)
Uncaught error from ./xbhxbh_1.1.0/xbhxbh.test.js FAILED
running 2 tests from ./xingbaohai_1.0.0/xingbaohai.test.js
Path Traversal in xingbaohai ... FAILED (2s)
Uncaught error from ./xingbaohai_1.0.0/xingbaohai.test.js FAILED
running 2 tests from ./xxf11_1.0.1/xxf11.test.js
Path Traversal in xxf11 ... FAILED (2s)
Uncaught error from ./xxf11_1.0.1/xxf11.test.js FAILED
running 2 tests from ./yjmyjmyjm_1.0.0/yjmyjmyjm.test.js
Path Traversal in yjmyjmyjm ... FAILED (2s)
Uncaught error from ./yjmyjmyjm_1.0.0/yjmyjmyjm.test.js FAILED
running 2 tests from ./yxxserver_1.0.0/yxxserver.test.js
Path Traversal in yxxserver ... FAILED (2s)
Uncaught error from ./yxxserver_1.0.0/yxxserver.test.js FAILED
running 2 tests from ./yyooopack_3.0.0/yyooopack.test.js
Path Traversal in yyooopack ... FAILED (2s)
Uncaught error from ./yyooopack_3.0.0/yyooopack.test.js FAILED
running 2 tests from ./yypsulie11_1.0.0/yypsulie11.test.js
Path Traversal in yypsulie11 ... FAILED (2s)
Uncaught error from ./yypsulie11_1.0.0/yypsulie11.test.js FAILED
running 2 tests from ./yzt_1.4.0/yzt.test.js
Path Traversal in yzt ... FAILED (2s)
Uncaught error from ./yzt_1.4.0/yzt.test.js FAILED
running 2 tests from ./zhanglina_1.0.0/zhanglina.test.js
------- post-test output -------
8888/tcp:           
----- post-test output end -----
Path Traversal in zhanglina ... FAILED (2s)
Uncaught error from ./zhanglina_1.0.0/zhanglina.test.js FAILED
running 2 tests from ./zhangranbigman_0.0.1/zhangranbigman.test.js
Path Traversal in zhangranbigman ... FAILED (2s)
Uncaught error from ./zhangranbigman_0.0.1/zhangranbigman.test.js FAILED
running 2 tests from ./zhaolei1111_1.1.0/zhaolei1111.test.js
Path Traversal in zhaolei1111 ... FAILED (2s)
Uncaught error from ./zhaolei1111_1.1.0/zhaolei1111.test.js FAILED
running 2 tests from ./zjjserver_1.0.0/zjjserver.test.js
Path Traversal in zjjserver ... FAILED (2s)
Uncaught error from ./zjjserver_1.0.0/zjjserver.test.js FAILED
running 2 tests from ./zs123_1.0.0/zs123.test.js
------- post-test output -------
8888/tcp:           
----- post-test output end -----
Path Traversal in zs123 ... FAILED (2s)
Uncaught error from ./zs123_1.0.0/zs123.test.js FAILED
running 2 tests from ./zwserver_0.1.1/zwserver.test.js
Path Traversal in zwserver ... FAILED (2s)
Uncaught error from ./zwserver_0.1.1/zwserver.test.js FAILED
running 2 tests from ./zxyserver_1.0.0/zxyserver.test.js
------- post-test output -------
8888/tcp:           
----- post-test output end -----
Path Traversal in zxyserver ... FAILED (2s)
Uncaught error from ./zxyserver_1.0.0/zxyserver.test.js FAILED

 ERRORS 

Path Traversal in 11xiaoli => ./11xiaoli_1.1.0/11xiaoli.test.js:23:6
error: Leaks detected:
  - 2 async operations to wait for a subprocess to exit were started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
  - 4 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./11xiaoli_1.1.0/11xiaoli.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in 22lixian => ./22lixian_1.0.0/22lixian.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./22lixian_1.0.0/22lixian.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in @vivaxy/here => ./@vivaxy-here_3.1.0/vivaxy_here.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./@vivaxy-here_3.1.0/vivaxy_here.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in angular-http-server => ./angular-http-server_1.0.0/angular-http-server.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./angular-http-server_1.0.0/angular-http-server.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in atropa-ide => ./atropa-ide_0.2.2-2/atropa-ide.test.js:12:6
error: Leaks detected:
  - "http" was created during the test, but not cleaned up during the test. Close the resource before the end of the test.
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async call to op_http_wait was started in this test, but never completed.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./atropa-ide_0.2.2-2/atropa-ide.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in augustine => ./augustine_0.2.3/augustine.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./augustine_0.2.3/augustine.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in basic-static => ./basic-static_2.0.2/basic-static.test.js:12:6
error: Leaks detected:
  - "http" was created during the test, but not cleaned up during the test. Close the resource before the end of the test.
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async call to op_http_wait was started in this test, but never completed.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./basic-static_2.0.2/basic-static.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in bitty => ./bitty_0.1.0/bitty.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./bitty_0.1.0/bitty.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in caihong => ./caihong_1.0.0/caihong.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./caihong_1.0.0/caihong.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in canvas-designer => ./canvas-designer_1.2.1/canvas-designer.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./canvas-designer_1.2.1/canvas-designer.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in caolilinode1 => ./caolilinode1_1.0.0/caolilinode1.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./caolilinode1_1.0.0/caolilinode1.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in caolilinode => ./caolilinode_1.0.0/caolilinode.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./caolilinode_1.0.0/caolilinode.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in crud-file-server => ./crud-file-server_0.7.0/crud-file-server.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./crud-file-server_0.7.0/crud-file-server.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in cuciuci => ./cuciuci_1.1.0/cuciuci.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./cuciuci_1.1.0/cuciuci.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in cuiaiguang => ./cuiaiguang_1.0.0/cuiaiguang.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./cuiaiguang_1.0.0/cuiaiguang.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in cxy => ./cxy_1.1.0/cxy.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./cxy_1.1.0/cxy.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in cyber-js => ./cyber-js_1.0.6/cyber-js.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./cyber-js_1.0.6/cyber-js.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in cypserver => ./cypserver_1.0.0/cypserver.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./cypserver_1.0.0/cypserver.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in datachannel-client => ./datachannel-client_1.0.2/datachannel-client.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./datachannel-client_1.0.2/datachannel-client.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in dcdcdcdcdc => ./dcdcdcdcdc_1.0.0/dcdcdcdcdc.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./dcdcdcdcdc_1.0.0/dcdcdcdcdc.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in dilu => ./dilu_0.1.3/dilu.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./dilu_0.1.3/dilu.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in dylmomo => ./dylmomo_1.0.0/dylmomo.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./dylmomo_1.0.0/dylmomo.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in ex-http-frame => ./ex-http-frame_1.0.2/ex-http-frame.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./ex-http-frame_1.0.2/ex-http-frame.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in express-blinker => ./express-blinker_0.0.6/express-blinker.test.js:12:6
error: Leaks detected:
  - "http" was created during the test, but not cleaned up during the test. Close the resource before the end of the test.
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async call to op_http_wait was started in this test, but never completed.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./express-blinker_0.0.6/express-blinker.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in exxxxxxxxxxx => ./exxxxxxxxxxx_1.0.2/exxxxxxxxxxx.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./exxxxxxxxxxx_1.0.2/exxxxxxxxxxx.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in fakelearnnodejs => ./fakelearnnodejs_0.0.1/fakelearnnodejs.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./fakelearnnodejs_0.0.1/fakelearnnodejs.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in fast-http-cli => ./fast-http-cli_0.0.8/fast-http-cli.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./fast-http-cli_0.0.8/fast-http-cli.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in fast-http => ./fast-http_0.1.3/fast-http.test.js:12:6
error: Leaks detected:
  - "http" was created during the test, but not cleaned up during the test. Close the resource before the end of the test.
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async call to op_http_wait was started in this test, but never completed.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./fast-http_0.1.3/fast-http.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in fbr-client => ./fbr-client_1.0.3/fbr-client.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./fbr-client_1.0.3/fbr-client.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in file-static-server => ./file-static-server_1.0.2/file-static-server.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./file-static-server_1.0.2/file-static-server.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in fsk-server => ./fsk-server_0.2.1/fsk-server.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./fsk-server_0.2.1/fsk-server.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in gamebutler => ./gamebutler_1.0.4/gamebutler.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./gamebutler_1.0.4/gamebutler.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in gaoxiaotingtingting => ./gaoxiaotingtingting_1.1.0/gaoxiaotingtingting.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./gaoxiaotingtingting_1.1.0/gaoxiaotingtingting.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in gaoxuyan => ./gaoxuyan_1.1.0/gaoxuyan.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./gaoxuyan_1.1.0/gaoxuyan.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in getstats => ./getstats_1.0.6/getstats.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./getstats_1.0.6/getstats.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in gfm-srv => ./gfm-srv_1.1.2/gfm-srv.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./gfm-srv_1.1.2/gfm-srv.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in glance => ./glance_3.0.0/glance.test.js:12:6
error: Leaks detected:
  - "http" was created during the test, but not cleaned up during the test. Close the resource before the end of the test.
  - 2 async calls to op_http_wait were started in this test, but never completed.
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./glance_3.0.0/glance.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in goserv => ./goserv_1.0.0/goserv.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./goserv_1.0.0/goserv.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in gyfserver => ./gyfserver_1.0.0/gyfserver.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./gyfserver_1.0.0/gyfserver.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in hangersteak => ./hangersteak_0.2.2/hangersteak.test.js:12:6
error: Leaks detected:
  - "http" was created during the test, but not cleaned up during the test. Close the resource before the end of the test.
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async call to op_http_wait was started in this test, but never completed.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./hangersteak_0.2.2/hangersteak.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in hdsdhhksjd => ./hdsdhhksjd_1.0.0/hdsdhhksjd.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./hdsdhhksjd_1.0.0/hdsdhhksjd.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in hftp => ./hftp_0.0.6/hftp.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./hftp_0.0.6/hftp.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in hostr => ./hostr_2.0.0/hostr.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./hostr_2.0.0/hostr.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in http-file-server => ./http-file-server_0.2.6/http-file-server.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./http-file-server_0.2.6/http-file-server.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in http-live-simulator => ./http-live-simulator_1.0.0/http-live-simulator.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./http-live-simulator_1.0.0/http-live-simulator.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in httpea => ./httpea_3.0.4/httpea.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./httpea_3.0.4/httpea.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in infraserver => ./infraserver_0.0.1/infraserver.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./infraserver_0.0.1/infraserver.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in intsol-package => ./intsol-package_1.0.0/intsol-package.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./intsol-package_1.0.0/intsol-package.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in isv-http => ./isv-http_0.0.9/isv-http.test.js:12:6
error: Leaks detected:
  - "http" was created during the test, but not cleaned up during the test. Close the resource before the end of the test.
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async call to op_http_wait was started in this test, but never completed.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./isv-http_0.0.9/isv-http.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in lessindex => ./lessindex_1.0.0/lessindex.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./lessindex_1.0.0/lessindex.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in lihuini => ./lihuini_1.0.0/lihuini.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./lihuini_1.0.0/lihuini.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in liuyaserver => ./liuyaserver_1.0.0/liuyaserver.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./liuyaserver_1.0.0/liuyaserver.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in liyujing => ./liyujing_1.1.0/liyujing.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./liyujing_1.1.0/liyujing.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in ljjnodeserve => ./ljjnodeserve_1.0.0/ljjnodeserve.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./ljjnodeserve_1.0.0/ljjnodeserve.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in looppake => ./looppake_3.0.0/looppake.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./looppake_3.0.0/looppake.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in ltt.js => ./ltt.js_1.0.0/ltt_js.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./ltt.js_1.0.0/ltt_js.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in ltt => ./ltt_1.1.0/ltt.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./ltt_1.1.0/ltt.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in lzl123 => ./lzl123_1.1.0/lzl123.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./lzl123_1.1.0/lzl123.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in m-server => ./m-server_1.4.0/m-server.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./m-server_1.4.0/m-server.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in mcstatic => ./mcstatic_0.0.20/mcstatic.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./mcstatic_0.0.20/mcstatic.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in mfrs => ./mfrs_1.0.0/mfrs.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./mfrs_1.0.0/mfrs.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in mfrserver => ./mfrserver_1.0.0/mfrserver.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./mfrserver_1.0.0/mfrserver.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in my-sn => ./my-sn_1.0.1/my-sn.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./my-sn_1.0.1/my-sn.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in myprolyz => ./myprolyz_1.1.0/myprolyz.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./myprolyz_1.1.0/myprolyz.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in myserve111 => ./myserve111_1.1.2/myserve111.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./myserve111_1.1.2/myserve111.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in nitro-server => ./nitro-server_1.3.3/nitro-server.test.js:12:6
error: Leaks detected:
  - "http" was created during the test, but not cleaned up during the test. Close the resource before the end of the test.
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async call to op_http_wait was started in this test, but never completed.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./nitro-server_1.3.3/nitro-server.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in node-cxc => ./node-cxc_1.0.0/node-cxc.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./node-cxc_1.0.0/node-cxc.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in node-simple-router => ./node-simple-router_0.10.0/node-simple-router.test.js:12:6
error: Leaks detected:
  - "http" was created during the test, but not cleaned up during the test. Close the resource before the end of the test.
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async call to op_http_wait was started in this test, but never completed.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./node-simple-router_0.10.0/node-simple-router.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in node-srv => ./node-srv_2.0.0/node-srv.test.js:12:6
error: Leaks detected:
  - "http" was created during the test, but not cleaned up during the test. Close the resource before the end of the test.
  - 2 async calls to op_read were started in this test, but never completed.
  - 2 async operations to get the next signal were started in this test, but never completed. This is often caused by not un-registering a OS signal handler.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - A signal listener was created during the test, but not fired/cleared during the test. Clear the signal listener by calling `Deno.removeSignalListener`.
  - An async call to op_http_wait was started in this test, but never completed.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./node-srv_2.0.0/node-srv.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in node-staticserver => ./node-staticserver_1.0.3/node-staticserver.test.js:12:6
error: TypeError: Cannot set properties of undefined (setting 'status')
    at Server.init (file:///home/bombe/UniSaarland/WebSec-Seminar/deno-SecBench.js/path-traversal/node-staticserver_1.0.3/node_modules/node-staticserver/lib/server.js:45:27)
    at module.exports (file:///home/bombe/UniSaarland/WebSec-Seminar/deno-SecBench.js/path-traversal/node-staticserver_1.0.3/node_modules/node-staticserver/lib/server.js:417:12)
    at file:///home/bombe/UniSaarland/WebSec-Seminar/deno-SecBench.js/path-traversal/node-staticserver_1.0.3/node-staticserver.test.js:22:13

./node-staticserver_1.0.3/node-staticserver.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in nodeaaaaa => ./nodeaaaaa_1.3.0/nodeaaaaa.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./nodeaaaaa_1.3.0/nodeaaaaa.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in nodejsccc => ./nodejsccc_1.0.0/nodejsccc.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./nodejsccc_1.0.0/nodejsccc.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in nopach => ./nopach_0.1.1/nopach.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./nopach_0.1.1/nopach.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in open-device => ./open-device_4.0.1/open-device.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./open-device_4.0.1/open-device.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in paopao613 => ./paopao613_1.0.0/paopao613.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./paopao613_1.0.0/paopao613.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in peiserver => ./peiserver_1.0.0/peiserver.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./peiserver_1.0.0/peiserver.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in proxey => ./proxey_0.4.2/proxey.test.js:12:6
error: Leaks detected:
  - "http" was created during the test, but not cleaned up during the test. Close the resource before the end of the test.
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async call to op_http_wait was started in this test, but never completed.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./proxey_0.4.2/proxey.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in ptest => ./ptest_1.0.0/ptest.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./ptest_1.0.0/ptest.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in public => ./public_0.1.2/public.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./public_0.1.2/public.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in pytservce => ./pytservce_1.0.0/pytservce.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./pytservce_1.0.0/pytservce.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in ritp => ./ritp_1.0.5/ritp.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./ritp_1.0.5/ritp.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in rjpserver => ./rjpserver_1.0.0/rjpserver.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./rjpserver_1.0.0/rjpserver.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in rollup-plugin-dev-server => ./rollup-plugin-dev-server_0.4.3/rollup-plugin-dev-server.test.js:12:6
error: Leaks detected:
  - "http" was created during the test, but not cleaned up during the test. Close the resource before the end of the test.
  - 2 async calls to op_read were started in this test, but never completed.
  - 2 async operations to get the next signal were started in this test, but never completed. This is often caused by not un-registering a OS signal handler.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - A signal listener was created during the test, but not fired/cleared during the test. Clear the signal listener by calling `Deno.removeSignalListener`.
  - An async call to op_http_wait was started in this test, but never completed.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./rollup-plugin-dev-server_0.4.3/rollup-plugin-dev-server.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in  rollup-plugin-serve-favicon => ./rollup-plugin-serve-favicon_0.4.2/rollup-plugin-serve-favicon.test.js:12:6
error: Leaks detected:
  - "http" was created during the test, but not cleaned up during the test. Close the resource before the end of the test.
  - 2 async calls to op_read were started in this test, but never completed.
  - 2 async operations to get the next signal were started in this test, but never completed. This is often caused by not un-registering a OS signal handler.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - A signal listener was created during the test, but not fired/cleared during the test. Clear the signal listener by calling `Deno.removeSignalListener`.
  - An async call to op_http_wait was started in this test, but never completed.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./rollup-plugin-serve-favicon_0.4.2/rollup-plugin-serve-favicon.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in rollup-plugin-serve => ./rollup-plugin-serve_0.4.2/rollup-plugin-serve.test.js:12:6
error: Leaks detected:
  - "http" was created during the test, but not cleaned up during the test. Close the resource before the end of the test.
  - 2 async calls to op_read were started in this test, but never completed.
  - 2 async operations to get the next signal were started in this test, but never completed. This is often caused by not un-registering a OS signal handler.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - A signal listener was created during the test, but not fired/cleared during the test. Clear the signal listener by calling `Deno.removeSignalListener`.
  - An async call to op_http_wait was started in this test, but never completed.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./rollup-plugin-serve_0.4.2/rollup-plugin-serve.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in rollup-plugin-server => ./rollup-plugin-server_0.7.0/rollup-plugin-server.test.js:12:6
error: Leaks detected:
  - "http" was created during the test, but not cleaned up during the test. Close the resource before the end of the test.
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async call to op_http_wait was started in this test, but never completed.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./rollup-plugin-server_0.7.0/rollup-plugin-server.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in rtcmulticonnection-client => ./rtcmulticonnection-client_1.0.5/rtcmulticonnection-client.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./rtcmulticonnection-client_1.0.5/rtcmulticonnection-client.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in run-this-place => ./run-this-place_1.0.2/run-this-place.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./run-this-place_1.0.2/run-this-place.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in sabu => ./sabu_1.0.6/sabu.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./sabu_1.0.6/sabu.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in serve-here.js => ./serve-here.js_1.1.0/serve-here_js.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./serve-here.js_1.1.0/serve-here_js.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in serve46 => ./serve46_1.0.0/serve46.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./serve46_1.0.0/serve46.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in server12311 => ./server12311_1.2.0/server12311.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./server12311_1.2.0/server12311.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in serverabc => ./serverabc_1.0.0/serverabc.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./serverabc_1.0.0/serverabc.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in serverfff => ./serverfff_1.1.1/serverfff.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./serverfff_1.1.1/serverfff.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in servergmf => ./servergmf_1.1.0/servergmf.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./servergmf_1.1.0/servergmf.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in serverhuwenhui => ./serverhuwenhui_1.1.0/serverhuwenhui.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./serverhuwenhui_1.1.0/serverhuwenhui.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in serverliujiayi1 => ./serverliujiayi1_1.1.0/serverliujiayi1.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./serverliujiayi1_1.1.0/serverliujiayi1.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in serverlyj333 => ./serverlyj333_1.1.0/serverlyj333.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./serverlyj333_1.1.0/serverlyj333.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in serverlyr => ./serverlyr_1.1.0/serverlyr.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./serverlyr_1.1.0/serverlyr.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in servershuai => ./servershuai_1.2.0/servershuai.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./servershuai_1.2.0/servershuai.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in serversyysyy => ./serversyysyy_1.1.0/serversyysyy.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./serversyysyy_1.1.0/serversyysyy.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in serverwg => ./serverwg_1.0.0/serverwg.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./serverwg_1.0.0/serverwg.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in serverwzl => ./serverwzl_1.3.1/serverwzl.test.js:23:6
error: Leaks detected:
  - 2 async operations to wait for a subprocess to exit were started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
  - 4 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./serverwzl_1.3.1/serverwzl.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in serverxh => ./serverxh_1.0.0/serverxh.test.js:23:6
error: Leaks detected:
  - 2 async operations to wait for a subprocess to exit were started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
  - 4 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./serverxh_1.0.0/serverxh.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in serverxxx => ./serverxxx_1.0.0/serverxxx.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./serverxxx_1.0.0/serverxxx.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in serveryaozeyan => ./serveryaozeyan_1.0.4/serveryaozeyan.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./serveryaozeyan_1.0.4/serveryaozeyan.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in serveryyl => ./serveryyl_1.1.0/serveryyl.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./serveryyl_1.1.0/serveryyl.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in serveryztyzt => ./serveryztyzt_1.4.0/serveryztyzt.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./serveryztyzt_1.4.0/serveryztyzt.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in serverzyqzyq => ./serverzyqzyq_1.1.0/serverzyqzyq.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./serverzyqzyq_1.1.0/serverzyqzyq.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in serverzyy => ./serverzyy_1.0.0/serverzyy.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./serverzyy_1.0.0/serverzyy.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in servewuqianqianqian => ./servewuqianqianqian_1.0.0/servewuqianqianqian.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./servewuqianqianqian_1.0.0/servewuqianqianqian.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in servey => ./servey_2.2.0/servey.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./servey_2.2.0/servey.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in severzlt => ./severzlt_1.0.0/severzlt.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./severzlt_1.0.0/severzlt.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in sgqserve => ./sgqserve_1.0.0/sgqserve.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./sgqserve_1.0.0/sgqserve.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in shenliru3 => ./shenliru3_1.3.0/shenliru3.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./shenliru3_1.3.0/shenliru3.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in shenliru => ./shenliru_1.2.0/shenliru.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./shenliru_1.2.0/shenliru.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in shit-server => ./shit-server_1.0.0/shit-server.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./shit-server_1.0.0/shit-server.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in simple-mock-server => ./simple-mock-server_0.2.1/simple-mock-server.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./simple-mock-server_0.2.1/simple-mock-server.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in songcaihong => ./songcaihong_1.0.0/songcaihong.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./songcaihong_1.0.0/songcaihong.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in srverqq => ./srverqq_1.0.0/srverqq.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./srverqq_1.0.0/srverqq.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in static-html-server => ./static-html-server_0.1.2/static-html-server.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./static-html-server_0.1.2/static-html-server.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in static-server-gx => ./static-server-gx_1.2.1/static-server-gx.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./static-server-gx_1.2.1/static-server-gx.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in statichttpserver => ./statichttpserver_0.9.7/statichttpserver.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./statichttpserver_0.9.7/statichttpserver.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in statics-server => ./statics-server_0.0.9/statics-server.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./statics-server_0.0.9/statics-server.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in stattic => ./stattic_0.2.3/stattic.test.js:12:6
error: Leaks detected:
  - "http" was created during the test, but not cleaned up during the test. Close the resource before the end of the test.
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async call to op_http_wait was started in this test, but never completed.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./stattic_0.2.3/stattic.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in susu-sum => ./susu-sum_1.0.0/susu-sum.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./susu-sum_1.0.0/susu-sum.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in tinyserver2 => ./tinyserver2_0.5.2/tinyserver2.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./tinyserver2_0.5.2/tinyserver2.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in tinyserver => ./tinyserver_0.1.1/tinyserver.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./tinyserver_0.1.1/tinyserver.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in uekw1511server => ./uekw1511server_1.0.1/uekw1511server.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./uekw1511server_1.0.1/uekw1511server.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in ussasasa => ./ussasasa_1.0.0/ussasasa.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./ussasasa_1.0.0/ussasasa.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in wangguojing123 => ./wangguojing123_1.3.0/wangguojing123.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./wangguojing123_1.3.0/wangguojing123.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in wangshuai => ./wangshuai_1.0.0/wangshuai.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./wangshuai_1.0.0/wangshuai.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in web-node-server => ./web-node-server_0.1.0/web-node-server.test.js:23:6
error: Leaks detected:
  - "http" was created during the test, but not cleaned up during the test. Close the resource before the end of the test.
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async call to op_http_wait was started in this test, but never completed.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./web-node-server_0.1.0/web-node-server.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in webrepl => ./webrepl_0.4.7/webrepl.test.js:12:6
error: Error: Not implemented: REPLServer.prototype.constructor
    at notImplemented (ext:deno_node/_utils.ts:9:9)
    at new REPLServer (node:repl:10:5)
    at Object.start (file:///home/bombe/UniSaarland/WebSec-Seminar/deno-SecBench.js/path-traversal/webrepl_0.4.7/node_modules/webrepl/webrepl.js:199:14)
    at file:///home/bombe/UniSaarland/WebSec-Seminar/deno-SecBench.js/path-traversal/webrepl_0.4.7/webrepl.test.js:22:7

./webrepl_0.4.7/webrepl.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in welcomyzt => ./welcomyzt_1.1.0/welcomyzt.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./welcomyzt_1.1.0/welcomyzt.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in wenluhong111 => ./wenluhong111_1.0.0/wenluhong111.test.js:23:6
error: Leaks detected:
  - 2 async operations to wait for a subprocess to exit were started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
  - 4 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./wenluhong111_1.0.0/wenluhong111.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in wenluhong11 => ./wenluhong11_1.0.0/wenluhong11.test.js:23:6
error: Leaks detected:
  - 2 async operations to wait for a subprocess to exit were started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
  - 4 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./wenluhong11_1.0.0/wenluhong11.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in wenluhong1 => ./wenluhong1_1.0.0/wenluhong1.test.js:23:6
error: Leaks detected:
  - 2 async operations to wait for a subprocess to exit were started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
  - 4 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./wenluhong1_1.0.0/wenluhong1.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in wffserve => ./wffserve_1.0.0/wffserve.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./wffserve_1.0.0/wffserve.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in wind-mvc => ./wind-mvc_0.0.6/wind-mvc.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./wind-mvc_0.0.6/wind-mvc.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in wintiwebdev => ./wintiwebdev_1.0.0/wintiwebdev.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./wintiwebdev_1.0.0/wintiwebdev.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in wrlc => ./wrlc_0.2.5/wrlc.test.js:12:6
error: Leaks detected:
  - "http" was created during the test, but not cleaned up during the test. Close the resource before the end of the test.
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async call to op_http_wait was started in this test, but never completed.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./wrlc_0.2.5/wrlc.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in wuzhuang => ./wuzhuang_1.0.0/wuzhuang.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./wuzhuang_1.0.0/wuzhuang.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in wuzhuangserver => ./wuzhuangserver_1.8.0/wuzhuangserver.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./wuzhuangserver_1.8.0/wuzhuangserver.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in xbhxbh => ./xbhxbh_1.1.0/xbhxbh.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./xbhxbh_1.1.0/xbhxbh.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in xingbaohai => ./xingbaohai_1.0.0/xingbaohai.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./xingbaohai_1.0.0/xingbaohai.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in xxf11 => ./xxf11_1.0.1/xxf11.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./xxf11_1.0.1/xxf11.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in yjmyjmyjm => ./yjmyjmyjm_1.0.0/yjmyjmyjm.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./yjmyjmyjm_1.0.0/yjmyjmyjm.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in yxxserver => ./yxxserver_1.0.0/yxxserver.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./yxxserver_1.0.0/yxxserver.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in yyooopack => ./yyooopack_3.0.0/yyooopack.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./yyooopack_3.0.0/yyooopack.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in yypsulie11 => ./yypsulie11_1.0.0/yypsulie11.test.js:23:6
error: Leaks detected:
  - 2 async operations to wait for a subprocess to exit were started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
  - 4 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./yypsulie11_1.0.0/yypsulie11.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in yzt => ./yzt_1.4.0/yzt.test.js:23:6
error: Leaks detected:
  - 2 async operations to wait for a subprocess to exit were started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
  - 4 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./yzt_1.4.0/yzt.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in zhanglina => ./zhanglina_1.0.0/zhanglina.test.js:23:6
error: Leaks detected:
  - 2 async operations to wait for a subprocess to exit were started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
  - 4 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./zhanglina_1.0.0/zhanglina.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in zhangranbigman => ./zhangranbigman_0.0.1/zhangranbigman.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./zhangranbigman_0.0.1/zhangranbigman.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in zhaolei1111 => ./zhaolei1111_1.1.0/zhaolei1111.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./zhaolei1111_1.1.0/zhaolei1111.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in zjjserver => ./zjjserver_1.0.0/zjjserver.test.js:23:6
error: Leaks detected:
  - 2 async operations to wait for a subprocess to exit were started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
  - 4 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./zjjserver_1.0.0/zjjserver.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in zs123 => ./zs123_1.0.0/zs123.test.js:23:6
error: Leaks detected:
  - 2 async operations to wait for a subprocess to exit were started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
  - 4 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./zs123_1.0.0/zs123.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in zwserver => ./zwserver_0.1.1/zwserver.test.js:23:6
error: Leaks detected:
  - 2 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
  - An async operation to wait for a subprocess to exit was started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./zwserver_0.1.1/zwserver.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

Path Traversal in zxyserver => ./zxyserver_1.0.0/zxyserver.test.js:23:6
error: Leaks detected:
  - 2 async operations to wait for a subprocess to exit were started in this test, but never completed. This is often caused by not awaiting the result of a `Deno.Process#status` call.
  - 4 async calls to op_read were started in this test, but never completed.
  - A child process stderr was opened during the test, but not closed during the test. Close the child process stderr by calling `proc.stderr.close()` or `await child.stderr.cancel()`.
  - A child process stdin was opened during the test, but not closed during the test. Close the child process stdin by calling `proc.stdin.close()`.
  - A child process stdout was opened during the test, but not closed during the test. Close the child process stdout by calling `proc.stdout.close()` or `await child.stdout.cancel()`.
  - A child process was started during the test, but not closed during the test. Close the child process by calling `proc.kill()` or `proc.close()`.
To get more details where leaks occurred, run again with the --trace-leaks flag.

./zxyserver_1.0.0/zxyserver.test.js (uncaught error)
error: null
This error was not caught from a test and caused the test runner to fail on the referenced module.
It most likely originated from a dangling promise, event/timeout handler or top-level code.

 FAILURES 

Path Traversal in 11xiaoli => ./11xiaoli_1.1.0/11xiaoli.test.js:23:6
./11xiaoli_1.1.0/11xiaoli.test.js (uncaught error)
Path Traversal in 22lixian => ./22lixian_1.0.0/22lixian.test.js:23:6
./22lixian_1.0.0/22lixian.test.js (uncaught error)
Path Traversal in @vivaxy/here => ./@vivaxy-here_3.1.0/vivaxy_here.test.js:23:6
./@vivaxy-here_3.1.0/vivaxy_here.test.js (uncaught error)
Path Traversal in angular-http-server => ./angular-http-server_1.0.0/angular-http-server.test.js:23:6
./angular-http-server_1.0.0/angular-http-server.test.js (uncaught error)
Path Traversal in atropa-ide => ./atropa-ide_0.2.2-2/atropa-ide.test.js:12:6
./atropa-ide_0.2.2-2/atropa-ide.test.js (uncaught error)
Path Traversal in augustine => ./augustine_0.2.3/augustine.test.js:23:6
./augustine_0.2.3/augustine.test.js (uncaught error)
Path Traversal in basic-static => ./basic-static_2.0.2/basic-static.test.js:12:6
./basic-static_2.0.2/basic-static.test.js (uncaught error)
Path Traversal in bitty => ./bitty_0.1.0/bitty.test.js:23:6
./bitty_0.1.0/bitty.test.js (uncaught error)
Path Traversal in caihong => ./caihong_1.0.0/caihong.test.js:23:6
./caihong_1.0.0/caihong.test.js (uncaught error)
Path Traversal in canvas-designer => ./canvas-designer_1.2.1/canvas-designer.test.js:23:6
./canvas-designer_1.2.1/canvas-designer.test.js (uncaught error)
Path Traversal in caolilinode1 => ./caolilinode1_1.0.0/caolilinode1.test.js:23:6
./caolilinode1_1.0.0/caolilinode1.test.js (uncaught error)
Path Traversal in caolilinode => ./caolilinode_1.0.0/caolilinode.test.js:23:6
./caolilinode_1.0.0/caolilinode.test.js (uncaught error)
Path Traversal in crud-file-server => ./crud-file-server_0.7.0/crud-file-server.test.js:23:6
./crud-file-server_0.7.0/crud-file-server.test.js (uncaught error)
Path Traversal in cuciuci => ./cuciuci_1.1.0/cuciuci.test.js:23:6
./cuciuci_1.1.0/cuciuci.test.js (uncaught error)
Path Traversal in cuiaiguang => ./cuiaiguang_1.0.0/cuiaiguang.test.js:23:6
./cuiaiguang_1.0.0/cuiaiguang.test.js (uncaught error)
Path Traversal in cxy => ./cxy_1.1.0/cxy.test.js:23:6
./cxy_1.1.0/cxy.test.js (uncaught error)
Path Traversal in cyber-js => ./cyber-js_1.0.6/cyber-js.test.js:23:6
./cyber-js_1.0.6/cyber-js.test.js (uncaught error)
Path Traversal in cypserver => ./cypserver_1.0.0/cypserver.test.js:23:6
./cypserver_1.0.0/cypserver.test.js (uncaught error)
Path Traversal in datachannel-client => ./datachannel-client_1.0.2/datachannel-client.test.js:23:6
./datachannel-client_1.0.2/datachannel-client.test.js (uncaught error)
Path Traversal in dcdcdcdcdc => ./dcdcdcdcdc_1.0.0/dcdcdcdcdc.test.js:23:6
./dcdcdcdcdc_1.0.0/dcdcdcdcdc.test.js (uncaught error)
Path Traversal in dilu => ./dilu_0.1.3/dilu.test.js:23:6
./dilu_0.1.3/dilu.test.js (uncaught error)
Path Traversal in dylmomo => ./dylmomo_1.0.0/dylmomo.test.js:23:6
./dylmomo_1.0.0/dylmomo.test.js (uncaught error)
Path Traversal in ex-http-frame => ./ex-http-frame_1.0.2/ex-http-frame.test.js:23:6
./ex-http-frame_1.0.2/ex-http-frame.test.js (uncaught error)
Path Traversal in express-blinker => ./express-blinker_0.0.6/express-blinker.test.js:12:6
./express-blinker_0.0.6/express-blinker.test.js (uncaught error)
Path Traversal in exxxxxxxxxxx => ./exxxxxxxxxxx_1.0.2/exxxxxxxxxxx.test.js:23:6
./exxxxxxxxxxx_1.0.2/exxxxxxxxxxx.test.js (uncaught error)
Path Traversal in fakelearnnodejs => ./fakelearnnodejs_0.0.1/fakelearnnodejs.test.js:23:6
./fakelearnnodejs_0.0.1/fakelearnnodejs.test.js (uncaught error)
Path Traversal in fast-http-cli => ./fast-http-cli_0.0.8/fast-http-cli.test.js:23:6
./fast-http-cli_0.0.8/fast-http-cli.test.js (uncaught error)
Path Traversal in fast-http => ./fast-http_0.1.3/fast-http.test.js:12:6
./fast-http_0.1.3/fast-http.test.js (uncaught error)
Path Traversal in fbr-client => ./fbr-client_1.0.3/fbr-client.test.js:23:6
./fbr-client_1.0.3/fbr-client.test.js (uncaught error)
Path Traversal in file-static-server => ./file-static-server_1.0.2/file-static-server.test.js:23:6
./file-static-server_1.0.2/file-static-server.test.js (uncaught error)
Path Traversal in fsk-server => ./fsk-server_0.2.1/fsk-server.test.js:23:6
./fsk-server_0.2.1/fsk-server.test.js (uncaught error)
Path Traversal in gamebutler => ./gamebutler_1.0.4/gamebutler.test.js:23:6
./gamebutler_1.0.4/gamebutler.test.js (uncaught error)
Path Traversal in gaoxiaotingtingting => ./gaoxiaotingtingting_1.1.0/gaoxiaotingtingting.test.js:23:6
./gaoxiaotingtingting_1.1.0/gaoxiaotingtingting.test.js (uncaught error)
Path Traversal in gaoxuyan => ./gaoxuyan_1.1.0/gaoxuyan.test.js:23:6
./gaoxuyan_1.1.0/gaoxuyan.test.js (uncaught error)
Path Traversal in getstats => ./getstats_1.0.6/getstats.test.js:23:6
./getstats_1.0.6/getstats.test.js (uncaught error)
Path Traversal in gfm-srv => ./gfm-srv_1.1.2/gfm-srv.test.js:23:6
./gfm-srv_1.1.2/gfm-srv.test.js (uncaught error)
Path Traversal in glance => ./glance_3.0.0/glance.test.js:12:6
./glance_3.0.0/glance.test.js (uncaught error)
Path Traversal in goserv => ./goserv_1.0.0/goserv.test.js:23:6
./goserv_1.0.0/goserv.test.js (uncaught error)
Path Traversal in gyfserver => ./gyfserver_1.0.0/gyfserver.test.js:23:6
./gyfserver_1.0.0/gyfserver.test.js (uncaught error)
Path Traversal in hangersteak => ./hangersteak_0.2.2/hangersteak.test.js:12:6
./hangersteak_0.2.2/hangersteak.test.js (uncaught error)
Path Traversal in hdsdhhksjd => ./hdsdhhksjd_1.0.0/hdsdhhksjd.test.js:23:6
./hdsdhhksjd_1.0.0/hdsdhhksjd.test.js (uncaught error)
Path Traversal in hftp => ./hftp_0.0.6/hftp.test.js:23:6
./hftp_0.0.6/hftp.test.js (uncaught error)
Path Traversal in hostr => ./hostr_2.0.0/hostr.test.js:23:6
./hostr_2.0.0/hostr.test.js (uncaught error)
Path Traversal in http-file-server => ./http-file-server_0.2.6/http-file-server.test.js:23:6
./http-file-server_0.2.6/http-file-server.test.js (uncaught error)
Path Traversal in http-live-simulator => ./http-live-simulator_1.0.0/http-live-simulator.test.js:23:6
./http-live-simulator_1.0.0/http-live-simulator.test.js (uncaught error)
Path Traversal in httpea => ./httpea_3.0.4/httpea.test.js:23:6
./httpea_3.0.4/httpea.test.js (uncaught error)
Path Traversal in infraserver => ./infraserver_0.0.1/infraserver.test.js:23:6
./infraserver_0.0.1/infraserver.test.js (uncaught error)
Path Traversal in intsol-package => ./intsol-package_1.0.0/intsol-package.test.js:23:6
./intsol-package_1.0.0/intsol-package.test.js (uncaught error)
Path Traversal in isv-http => ./isv-http_0.0.9/isv-http.test.js:12:6
./isv-http_0.0.9/isv-http.test.js (uncaught error)
Path Traversal in lessindex => ./lessindex_1.0.0/lessindex.test.js:23:6
./lessindex_1.0.0/lessindex.test.js (uncaught error)
Path Traversal in lihuini => ./lihuini_1.0.0/lihuini.test.js:23:6
./lihuini_1.0.0/lihuini.test.js (uncaught error)
Path Traversal in liuyaserver => ./liuyaserver_1.0.0/liuyaserver.test.js:23:6
./liuyaserver_1.0.0/liuyaserver.test.js (uncaught error)
Path Traversal in liyujing => ./liyujing_1.1.0/liyujing.test.js:23:6
./liyujing_1.1.0/liyujing.test.js (uncaught error)
Path Traversal in ljjnodeserve => ./ljjnodeserve_1.0.0/ljjnodeserve.test.js:23:6
./ljjnodeserve_1.0.0/ljjnodeserve.test.js (uncaught error)
Path Traversal in looppake => ./looppake_3.0.0/looppake.test.js:23:6
./looppake_3.0.0/looppake.test.js (uncaught error)
Path Traversal in ltt.js => ./ltt.js_1.0.0/ltt_js.test.js:23:6
./ltt.js_1.0.0/ltt_js.test.js (uncaught error)
Path Traversal in ltt => ./ltt_1.1.0/ltt.test.js:23:6
./ltt_1.1.0/ltt.test.js (uncaught error)
Path Traversal in lzl123 => ./lzl123_1.1.0/lzl123.test.js:23:6
./lzl123_1.1.0/lzl123.test.js (uncaught error)
Path Traversal in m-server => ./m-server_1.4.0/m-server.test.js:23:6
./m-server_1.4.0/m-server.test.js (uncaught error)
Path Traversal in mcstatic => ./mcstatic_0.0.20/mcstatic.test.js:23:6
./mcstatic_0.0.20/mcstatic.test.js (uncaught error)
Path Traversal in mfrs => ./mfrs_1.0.0/mfrs.test.js:23:6
./mfrs_1.0.0/mfrs.test.js (uncaught error)
Path Traversal in mfrserver => ./mfrserver_1.0.0/mfrserver.test.js:23:6
./mfrserver_1.0.0/mfrserver.test.js (uncaught error)
Path Traversal in my-sn => ./my-sn_1.0.1/my-sn.test.js:23:6
./my-sn_1.0.1/my-sn.test.js (uncaught error)
Path Traversal in myprolyz => ./myprolyz_1.1.0/myprolyz.test.js:23:6
./myprolyz_1.1.0/myprolyz.test.js (uncaught error)
Path Traversal in myserve111 => ./myserve111_1.1.2/myserve111.test.js:23:6
./myserve111_1.1.2/myserve111.test.js (uncaught error)
Path Traversal in nitro-server => ./nitro-server_1.3.3/nitro-server.test.js:12:6
./nitro-server_1.3.3/nitro-server.test.js (uncaught error)
Path Traversal in node-cxc => ./node-cxc_1.0.0/node-cxc.test.js:23:6
./node-cxc_1.0.0/node-cxc.test.js (uncaught error)
Path Traversal in node-simple-router => ./node-simple-router_0.10.0/node-simple-router.test.js:12:6
./node-simple-router_0.10.0/node-simple-router.test.js (uncaught error)
Path Traversal in node-srv => ./node-srv_2.0.0/node-srv.test.js:12:6
./node-srv_2.0.0/node-srv.test.js (uncaught error)
Path Traversal in node-staticserver => ./node-staticserver_1.0.3/node-staticserver.test.js:12:6
./node-staticserver_1.0.3/node-staticserver.test.js (uncaught error)
Path Traversal in nodeaaaaa => ./nodeaaaaa_1.3.0/nodeaaaaa.test.js:23:6
./nodeaaaaa_1.3.0/nodeaaaaa.test.js (uncaught error)
Path Traversal in nodejsccc => ./nodejsccc_1.0.0/nodejsccc.test.js:23:6
./nodejsccc_1.0.0/nodejsccc.test.js (uncaught error)
Path Traversal in nopach => ./nopach_0.1.1/nopach.test.js:23:6
./nopach_0.1.1/nopach.test.js (uncaught error)
Path Traversal in open-device => ./open-device_4.0.1/open-device.test.js:23:6
./open-device_4.0.1/open-device.test.js (uncaught error)
Path Traversal in paopao613 => ./paopao613_1.0.0/paopao613.test.js:23:6
./paopao613_1.0.0/paopao613.test.js (uncaught error)
Path Traversal in peiserver => ./peiserver_1.0.0/peiserver.test.js:23:6
./peiserver_1.0.0/peiserver.test.js (uncaught error)
Path Traversal in proxey => ./proxey_0.4.2/proxey.test.js:12:6
./proxey_0.4.2/proxey.test.js (uncaught error)
Path Traversal in ptest => ./ptest_1.0.0/ptest.test.js:23:6
./ptest_1.0.0/ptest.test.js (uncaught error)
Path Traversal in public => ./public_0.1.2/public.test.js:23:6
./public_0.1.2/public.test.js (uncaught error)
Path Traversal in pytservce => ./pytservce_1.0.0/pytservce.test.js:23:6
./pytservce_1.0.0/pytservce.test.js (uncaught error)
Path Traversal in ritp => ./ritp_1.0.5/ritp.test.js:23:6
./ritp_1.0.5/ritp.test.js (uncaught error)
Path Traversal in rjpserver => ./rjpserver_1.0.0/rjpserver.test.js:23:6
./rjpserver_1.0.0/rjpserver.test.js (uncaught error)
Path Traversal in rollup-plugin-dev-server => ./rollup-plugin-dev-server_0.4.3/rollup-plugin-dev-server.test.js:12:6
./rollup-plugin-dev-server_0.4.3/rollup-plugin-dev-server.test.js (uncaught error)
Path Traversal in  rollup-plugin-serve-favicon => ./rollup-plugin-serve-favicon_0.4.2/rollup-plugin-serve-favicon.test.js:12:6
./rollup-plugin-serve-favicon_0.4.2/rollup-plugin-serve-favicon.test.js (uncaught error)
Path Traversal in rollup-plugin-serve => ./rollup-plugin-serve_0.4.2/rollup-plugin-serve.test.js:12:6
./rollup-plugin-serve_0.4.2/rollup-plugin-serve.test.js (uncaught error)
Path Traversal in rollup-plugin-server => ./rollup-plugin-server_0.7.0/rollup-plugin-server.test.js:12:6
./rollup-plugin-server_0.7.0/rollup-plugin-server.test.js (uncaught error)
Path Traversal in rtcmulticonnection-client => ./rtcmulticonnection-client_1.0.5/rtcmulticonnection-client.test.js:23:6
./rtcmulticonnection-client_1.0.5/rtcmulticonnection-client.test.js (uncaught error)
Path Traversal in run-this-place => ./run-this-place_1.0.2/run-this-place.test.js:23:6
./run-this-place_1.0.2/run-this-place.test.js (uncaught error)
Path Traversal in sabu => ./sabu_1.0.6/sabu.test.js:23:6
./sabu_1.0.6/sabu.test.js (uncaught error)
Path Traversal in serve-here.js => ./serve-here.js_1.1.0/serve-here_js.test.js:23:6
./serve-here.js_1.1.0/serve-here_js.test.js (uncaught error)
Path Traversal in serve46 => ./serve46_1.0.0/serve46.test.js:23:6
./serve46_1.0.0/serve46.test.js (uncaught error)
Path Traversal in server12311 => ./server12311_1.2.0/server12311.test.js:23:6
./server12311_1.2.0/server12311.test.js (uncaught error)
Path Traversal in serverabc => ./serverabc_1.0.0/serverabc.test.js:23:6
./serverabc_1.0.0/serverabc.test.js (uncaught error)
Path Traversal in serverfff => ./serverfff_1.1.1/serverfff.test.js:23:6
./serverfff_1.1.1/serverfff.test.js (uncaught error)
Path Traversal in servergmf => ./servergmf_1.1.0/servergmf.test.js:23:6
./servergmf_1.1.0/servergmf.test.js (uncaught error)
Path Traversal in serverhuwenhui => ./serverhuwenhui_1.1.0/serverhuwenhui.test.js:23:6
./serverhuwenhui_1.1.0/serverhuwenhui.test.js (uncaught error)
Path Traversal in serverliujiayi1 => ./serverliujiayi1_1.1.0/serverliujiayi1.test.js:23:6
./serverliujiayi1_1.1.0/serverliujiayi1.test.js (uncaught error)
Path Traversal in serverlyj333 => ./serverlyj333_1.1.0/serverlyj333.test.js:23:6
./serverlyj333_1.1.0/serverlyj333.test.js (uncaught error)
Path Traversal in serverlyr => ./serverlyr_1.1.0/serverlyr.test.js:23:6
./serverlyr_1.1.0/serverlyr.test.js (uncaught error)
Path Traversal in servershuai => ./servershuai_1.2.0/servershuai.test.js:23:6
./servershuai_1.2.0/servershuai.test.js (uncaught error)
Path Traversal in serversyysyy => ./serversyysyy_1.1.0/serversyysyy.test.js:23:6
./serversyysyy_1.1.0/serversyysyy.test.js (uncaught error)
Path Traversal in serverwg => ./serverwg_1.0.0/serverwg.test.js:23:6
./serverwg_1.0.0/serverwg.test.js (uncaught error)
Path Traversal in serverwzl => ./serverwzl_1.3.1/serverwzl.test.js:23:6
./serverwzl_1.3.1/serverwzl.test.js (uncaught error)
Path Traversal in serverxh => ./serverxh_1.0.0/serverxh.test.js:23:6
./serverxh_1.0.0/serverxh.test.js (uncaught error)
Path Traversal in serverxxx => ./serverxxx_1.0.0/serverxxx.test.js:23:6
./serverxxx_1.0.0/serverxxx.test.js (uncaught error)
Path Traversal in serveryaozeyan => ./serveryaozeyan_1.0.4/serveryaozeyan.test.js:23:6
./serveryaozeyan_1.0.4/serveryaozeyan.test.js (uncaught error)
Path Traversal in serveryyl => ./serveryyl_1.1.0/serveryyl.test.js:23:6
./serveryyl_1.1.0/serveryyl.test.js (uncaught error)
Path Traversal in serveryztyzt => ./serveryztyzt_1.4.0/serveryztyzt.test.js:23:6
./serveryztyzt_1.4.0/serveryztyzt.test.js (uncaught error)
Path Traversal in serverzyqzyq => ./serverzyqzyq_1.1.0/serverzyqzyq.test.js:23:6
./serverzyqzyq_1.1.0/serverzyqzyq.test.js (uncaught error)
Path Traversal in serverzyy => ./serverzyy_1.0.0/serverzyy.test.js:23:6
./serverzyy_1.0.0/serverzyy.test.js (uncaught error)
Path Traversal in servewuqianqianqian => ./servewuqianqianqian_1.0.0/servewuqianqianqian.test.js:23:6
./servewuqianqianqian_1.0.0/servewuqianqianqian.test.js (uncaught error)
Path Traversal in servey => ./servey_2.2.0/servey.test.js:23:6
./servey_2.2.0/servey.test.js (uncaught error)
Path Traversal in severzlt => ./severzlt_1.0.0/severzlt.test.js:23:6
./severzlt_1.0.0/severzlt.test.js (uncaught error)
Path Traversal in sgqserve => ./sgqserve_1.0.0/sgqserve.test.js:23:6
./sgqserve_1.0.0/sgqserve.test.js (uncaught error)
Path Traversal in shenliru3 => ./shenliru3_1.3.0/shenliru3.test.js:23:6
./shenliru3_1.3.0/shenliru3.test.js (uncaught error)
Path Traversal in shenliru => ./shenliru_1.2.0/shenliru.test.js:23:6
./shenliru_1.2.0/shenliru.test.js (uncaught error)
Path Traversal in shit-server => ./shit-server_1.0.0/shit-server.test.js:23:6
./shit-server_1.0.0/shit-server.test.js (uncaught error)
Path Traversal in simple-mock-server => ./simple-mock-server_0.2.1/simple-mock-server.test.js:23:6
./simple-mock-server_0.2.1/simple-mock-server.test.js (uncaught error)
Path Traversal in songcaihong => ./songcaihong_1.0.0/songcaihong.test.js:23:6
./songcaihong_1.0.0/songcaihong.test.js (uncaught error)
Path Traversal in srverqq => ./srverqq_1.0.0/srverqq.test.js:23:6
./srverqq_1.0.0/srverqq.test.js (uncaught error)
Path Traversal in static-html-server => ./static-html-server_0.1.2/static-html-server.test.js:23:6
./static-html-server_0.1.2/static-html-server.test.js (uncaught error)
Path Traversal in static-server-gx => ./static-server-gx_1.2.1/static-server-gx.test.js:23:6
./static-server-gx_1.2.1/static-server-gx.test.js (uncaught error)
Path Traversal in statichttpserver => ./statichttpserver_0.9.7/statichttpserver.test.js:23:6
./statichttpserver_0.9.7/statichttpserver.test.js (uncaught error)
Path Traversal in statics-server => ./statics-server_0.0.9/statics-server.test.js:23:6
./statics-server_0.0.9/statics-server.test.js (uncaught error)
Path Traversal in stattic => ./stattic_0.2.3/stattic.test.js:12:6
./stattic_0.2.3/stattic.test.js (uncaught error)
Path Traversal in susu-sum => ./susu-sum_1.0.0/susu-sum.test.js:23:6
./susu-sum_1.0.0/susu-sum.test.js (uncaught error)
Path Traversal in tinyserver2 => ./tinyserver2_0.5.2/tinyserver2.test.js:23:6
./tinyserver2_0.5.2/tinyserver2.test.js (uncaught error)
Path Traversal in tinyserver => ./tinyserver_0.1.1/tinyserver.test.js:23:6
./tinyserver_0.1.1/tinyserver.test.js (uncaught error)
Path Traversal in uekw1511server => ./uekw1511server_1.0.1/uekw1511server.test.js:23:6
./uekw1511server_1.0.1/uekw1511server.test.js (uncaught error)
Path Traversal in ussasasa => ./ussasasa_1.0.0/ussasasa.test.js:23:6
./ussasasa_1.0.0/ussasasa.test.js (uncaught error)
Path Traversal in wangguojing123 => ./wangguojing123_1.3.0/wangguojing123.test.js:23:6
./wangguojing123_1.3.0/wangguojing123.test.js (uncaught error)
Path Traversal in wangshuai => ./wangshuai_1.0.0/wangshuai.test.js:23:6
./wangshuai_1.0.0/wangshuai.test.js (uncaught error)
Path Traversal in web-node-server => ./web-node-server_0.1.0/web-node-server.test.js:23:6
./web-node-server_0.1.0/web-node-server.test.js (uncaught error)
Path Traversal in webrepl => ./webrepl_0.4.7/webrepl.test.js:12:6
./webrepl_0.4.7/webrepl.test.js (uncaught error)
Path Traversal in welcomyzt => ./welcomyzt_1.1.0/welcomyzt.test.js:23:6
./welcomyzt_1.1.0/welcomyzt.test.js (uncaught error)
Path Traversal in wenluhong111 => ./wenluhong111_1.0.0/wenluhong111.test.js:23:6
./wenluhong111_1.0.0/wenluhong111.test.js (uncaught error)
Path Traversal in wenluhong11 => ./wenluhong11_1.0.0/wenluhong11.test.js:23:6
./wenluhong11_1.0.0/wenluhong11.test.js (uncaught error)
Path Traversal in wenluhong1 => ./wenluhong1_1.0.0/wenluhong1.test.js:23:6
./wenluhong1_1.0.0/wenluhong1.test.js (uncaught error)
Path Traversal in wffserve => ./wffserve_1.0.0/wffserve.test.js:23:6
./wffserve_1.0.0/wffserve.test.js (uncaught error)
Path Traversal in wind-mvc => ./wind-mvc_0.0.6/wind-mvc.test.js:23:6
./wind-mvc_0.0.6/wind-mvc.test.js (uncaught error)
Path Traversal in wintiwebdev => ./wintiwebdev_1.0.0/wintiwebdev.test.js:23:6
./wintiwebdev_1.0.0/wintiwebdev.test.js (uncaught error)
Path Traversal in wrlc => ./wrlc_0.2.5/wrlc.test.js:12:6
./wrlc_0.2.5/wrlc.test.js (uncaught error)
Path Traversal in wuzhuang => ./wuzhuang_1.0.0/wuzhuang.test.js:23:6
./wuzhuang_1.0.0/wuzhuang.test.js (uncaught error)
Path Traversal in wuzhuangserver => ./wuzhuangserver_1.8.0/wuzhuangserver.test.js:23:6
./wuzhuangserver_1.8.0/wuzhuangserver.test.js (uncaught error)
Path Traversal in xbhxbh => ./xbhxbh_1.1.0/xbhxbh.test.js:23:6
./xbhxbh_1.1.0/xbhxbh.test.js (uncaught error)
Path Traversal in xingbaohai => ./xingbaohai_1.0.0/xingbaohai.test.js:23:6
./xingbaohai_1.0.0/xingbaohai.test.js (uncaught error)
Path Traversal in xxf11 => ./xxf11_1.0.1/xxf11.test.js:23:6
./xxf11_1.0.1/xxf11.test.js (uncaught error)
Path Traversal in yjmyjmyjm => ./yjmyjmyjm_1.0.0/yjmyjmyjm.test.js:23:6
./yjmyjmyjm_1.0.0/yjmyjmyjm.test.js (uncaught error)
Path Traversal in yxxserver => ./yxxserver_1.0.0/yxxserver.test.js:23:6
./yxxserver_1.0.0/yxxserver.test.js (uncaught error)
Path Traversal in yyooopack => ./yyooopack_3.0.0/yyooopack.test.js:23:6
./yyooopack_3.0.0/yyooopack.test.js (uncaught error)
Path Traversal in yypsulie11 => ./yypsulie11_1.0.0/yypsulie11.test.js:23:6
./yypsulie11_1.0.0/yypsulie11.test.js (uncaught error)
Path Traversal in yzt => ./yzt_1.4.0/yzt.test.js:23:6
./yzt_1.4.0/yzt.test.js (uncaught error)
Path Traversal in zhanglina => ./zhanglina_1.0.0/zhanglina.test.js:23:6
./zhanglina_1.0.0/zhanglina.test.js (uncaught error)
Path Traversal in zhangranbigman => ./zhangranbigman_0.0.1/zhangranbigman.test.js:23:6
./zhangranbigman_0.0.1/zhangranbigman.test.js (uncaught error)
Path Traversal in zhaolei1111 => ./zhaolei1111_1.1.0/zhaolei1111.test.js:23:6
./zhaolei1111_1.1.0/zhaolei1111.test.js (uncaught error)
Path Traversal in zjjserver => ./zjjserver_1.0.0/zjjserver.test.js:23:6
./zjjserver_1.0.0/zjjserver.test.js (uncaught error)
Path Traversal in zs123 => ./zs123_1.0.0/zs123.test.js:23:6
./zs123_1.0.0/zs123.test.js (uncaught error)
Path Traversal in zwserver => ./zwserver_0.1.1/zwserver.test.js:23:6
./zwserver_0.1.1/zwserver.test.js (uncaught error)
Path Traversal in zxyserver => ./zxyserver_1.0.0/zxyserver.test.js:23:6
./zxyserver_1.0.0/zxyserver.test.js (uncaught error)

FAILED | 0 passed | 320 failed (4m58s)

error: AssertionError: Values are not strictly equal.


    [Diff] Actual / Expected


+   <!DOCTYPE html>\n
+   <html>\n
+   <body>\n
+   \n
+   <h1>CISPA</h1>\n
+   <p>vulns4js! is here.</p>\n
+   \n
+   </body>\n
+   </html> 
-   


    at assertStrictEquals (https://jsr.io/@std/assert/1.0.13/strict_equals.ts:66:9)
    at toBe (https://jsr.io/@std/expect/1.0.16/_matchers.ts:33:5)
    at applyMatcher (https://jsr.io/@std/expect/1.0.16/expect.ts:223:13)
    at Proxy.<anonymous> (https://jsr.io/@std/expect/1.0.16/expect.ts:233:13)
    at file:///home/bombe/UniSaarland/WebSec-Seminar/deno-SecBench.js/path-traversal/api-proxy_0.0.2/api-proxy.test.js:24:20
    at ChildProcess.exithandler (node:child_process:297:5)
    at ChildProcess.emit (ext:deno_node/_events.mjs:436:20)
    at maybeClose (ext:deno_node/internal/child_process.ts:69:11)
    at ext:deno_node/internal/child_process.ts:281:11
    at Object.runMicrotasks (ext:core/01_core.js:692:26)
